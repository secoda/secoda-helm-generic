datastores:
  secoda:
    existing_secret: ""
    admin_password: "" # We suggest using `openssl rand -hex 20 | cut -c 1-16` to fill this value.
    secret_key: "" # You can use `uuidgen | tr '[:upper:]' '[:lower:]'` to fill this value.
    private_key: "" # `openssl genrsa -out secoda.private.pem 2048 && cat secoda.private.pem | base64 | tr -d \\n`
    public_key: "" # `openssl rsa -in secoda.private.pem -pubout > secoda.public.pem && cat secoda.public.pem | base64 | tr -d \\n`
    db_host: "" # If using `cloudSqlAuthProxy`, this value should be set to `localhost`. Otherwise, this should be similar to `rds.amazonrds.com` or an ip address. 
    db_password: "" # This is the default database password; it should be alphanumeric, or it may break connection strings.
    es_host: "" # This is the opensearch host with the protocol prefix, i.e. https://. It may be similar to `https://search-secoda-<random>.<region>.es.amazonaws.com`.
    es_username: "" # This is the opensearch username for the opensearch user. It should be alphanumeric, or it may break connection strings.
    es_password: "" # This is the opensearch password for the opensearch user. It should be alphanumeric, or it may break connection strings.

ingress:
  enabled: true
  tls:
    - secretName: lb
  hosts:
    - host: onpremise.secoda.co # Replace with *your* FQDN.
      paths:
        - path: /*
          pathType: Prefix

cloudSqlAuthProxy:
  enabled: false # Only if applicable, and using GCP.
  databaseName: project:region:instance # Only if applicable, and using GCP.